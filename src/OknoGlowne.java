
import java.io.*;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author kastel
 */
public class OknoGlowne extends javax.swing.JFrame
{

	/**
	 * Wypelnia wszystkie wydarzenia w liscie wydarzen ich czasami startowymi
	 * pobranymi na podstawie poprzedniego wydarzenia i czasu czynnosci
	 */
	public void ObliczCzasStartowy()
	{
		for (Czynnosc c : Strzalki)
		{
			String prev = c.nazw_poprz;
			String next = c.nazw_next;

			//Jezeli nazwy wydarzen w czynnosci zgadzaja sie z nazwami wydarzen
			//w liscie wydarzen to przypisz obiekt wydarzenia do obiektow w czynnosci
			for (Zdarzenie z : Wydarzenia)
			{
				if (z.Nazwa.equals(prev))
				{
					c.poprzednie = z;
				}
				if (z.Nazwa.equals(next))
				{
					c.nastepne = z;
				}
			}

			//Przypisz do wydarzen w czynnosciach najwiekszy czas startowy jaki sie da
			int tmpCzasStartowy = c.poprzednie.start_time + c.Czas;
			if (tmpCzasStartowy > c.nastepne.start_time)
			{
				c.nastepne.start_time = tmpCzasStartowy;
			}
		}

		//Ostatnie wydarzenie ma zawsze czas startowy = czas koncowy
		Strzalki.get(Strzalki.size() - 1).nastepne.end_time = Strzalki.get(Strzalki.size() - 1).nastepne.start_time;
	}

	/**
	 * Wylicza czasy koncowe wszystkich wydarzen w liscie czynnosci w malejacej
	 * petli
	 */
	public void ObliczCzasKoncowy()
	{
		//Przejedz liste czynnosci od tylu i najmniejszy mozliwy czas koncowy przypisz do wydarzenia
		for (int i = Strzalki.size() - 1; i >= 0; i--)
		{
			int tmpCzasKoncowy = Strzalki.get(i).nastepne.end_time - Strzalki.get(i).Czas;

			if (tmpCzasKoncowy < Strzalki.get(i).poprzednie.end_time)
			{
				Strzalki.get(i).poprzednie.end_time = tmpCzasKoncowy;
			}
		}
		//Pierwsze wydarzenie ma zawsze endtime=0, jakis problem z przypisaniem danej
		Strzalki.get(0).poprzednie.end_time = 0;
	}

	/**
	 * Oblicza luzy we wszystkich wydarzeniach w liscie czynnosci
	 */
	public void ObliczLuz()
	{
		for (Czynnosc c : Strzalki)
		{
			c.poprzednie.luz = c.poprzednie.end_time - c.poprzednie.start_time;
		}
		Strzalki.get(Strzalki.size() - 1).nastepne.luz = Strzalki.get(Strzalki.size() - 1).nastepne.end_time - Strzalki.get(Strzalki.size() - 1).nastepne.start_time;
	}

	/**
	 * Wyznacza Sciezke krytyczna w grafie i wyswietla jej rezultat
	 */
	public void SciezkaKrytyczna()
	{
		if (!Strzalki.isEmpty())
		{
			ObliczCzasStartowy();
			ObliczCzasKoncowy();
			ObliczLuz();

			String cpm = "Sciezka: ";
			for (Zdarzenie z : Wydarzenia)
			{
				if (z.luz == 0)
				{
					cpm += z.Nazwa + ", ";
				}
			}
			JOptionPane.showMessageDialog(null, cpm + "\nCzas realizacji: " + Wydarzenia.get(Wydarzenia.size() - 1).end_time, "Sciezka krytyczna", JOptionPane.PLAIN_MESSAGE);
		}
		else
		{
			JOptionPane.showMessageDialog(null, "Nie wykryto żadnych czynnosci!", "Error!", JOptionPane.ERROR_MESSAGE);
		}
	}

	/**
	 * Dane globalne
	 */
	DefaultListModel listModel = new DefaultListModel();	//Do wyswietlania w okienku
	List<Zdarzenie> Wydarzenia = new ArrayList<>();			//Lista Zdarzen
	List<Czynnosc> Strzalki = new ArrayList<>();			//Lista czynnosci laczaca zdarzenia
	File plik = new File("Graf.txt");						//Plik z ktorego zczytuje dane
	List<String> gotoweWydarzenia = new ArrayList<>();

	/**
	 * Creates new form OknoGlowne
	 */
	public OknoGlowne()
	{
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jFrame1 = new javax.swing.JFrame();
        WybZdarzeniaDial = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jMenu3 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        NazwaZdarzeniaField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lastZdarzenieComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ZdarzeniaLista = new javax.swing.JList(listModel);
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CzasCzynnosciField = new javax.swing.JFormattedTextField();
        DodajZdarzeniebtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        nextZdarzenieComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        DodajCzynnoscbtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        WyznaczSciezke = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        WczytajzPliku = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        WybZdarzeniaDial.setResizable(false);

        jScrollPane2.setViewportView(jList1);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Wybierz zdarzenie poczatkowe");

        jButton1.setText("OK");

        javax.swing.GroupLayout WybZdarzeniaDialLayout = new javax.swing.GroupLayout(WybZdarzeniaDial.getContentPane());
        WybZdarzeniaDial.getContentPane().setLayout(WybZdarzeniaDialLayout);
        WybZdarzeniaDialLayout.setHorizontalGroup(
            WybZdarzeniaDialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WybZdarzeniaDialLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(WybZdarzeniaDialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        WybZdarzeniaDialLayout.setVerticalGroup(
            WybZdarzeniaDialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WybZdarzeniaDialLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Logistyka CPM");
        setResizable(false);

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dodaj nowe zdarzenie");

        jLabel2.setLabelFor(CzasCzynnosciField);
        jLabel2.setText("Czas Czynnosci");

        jLabel3.setLabelFor(lastZdarzenieComboBox);
        jLabel3.setText("Poprzednie Zdarzenie");

        ZdarzeniaLista.setToolTipText("Lista Zdarzeń w projekcie");
        ZdarzeniaLista.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ZdarzeniaLista.setDragEnabled(true);
        ZdarzeniaLista.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                ZdarzeniaListaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ZdarzeniaLista);

        jLabel4.setLabelFor(NazwaZdarzeniaField);
        jLabel4.setText("Nazwa Zdarzenia");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setLabelFor(ZdarzeniaLista);
        jLabel5.setText("Lista czynności");
        jLabel5.setVerifyInputWhenFocusTarget(false);

        CzasCzynnosciField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                CzasCzynnosciFieldKeyTyped(evt);
            }
        });

        DodajZdarzeniebtn.setText("Dodaj Zdarzenie");
        DodajZdarzeniebtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                DodajZdarzeniebtnActionPerformed(evt);
            }
        });

        jLabel6.setLabelFor(lastZdarzenieComboBox);
        jLabel6.setText("Nastepne Zdarzenie");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Dodaj nową czynność");

        DodajCzynnoscbtn.setText("Dodaj Czynnosc");
        DodajCzynnoscbtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                DodajCzynnoscbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NazwaZdarzeniaField))
                    .addComponent(jSeparator1)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DodajZdarzeniebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CzasCzynnosciField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lastZdarzenieComboBox, 0, 137, Short.MAX_VALUE)
                            .addComponent(nextZdarzenieComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(DodajCzynnoscbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NazwaZdarzeniaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DodajZdarzeniebtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lastZdarzenieComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(nextZdarzenieComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CzasCzynnosciField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DodajCzynnoscbtn))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        CzasCzynnosciField.getAccessibleContext().setAccessibleName("");

        jMenu1.setText("Plik");

        WyznaczSciezke.setText("Ścieżka Krytyczna");
        WyznaczSciezke.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                WyznaczSciezkeActionPerformed(evt);
            }
        });
        jMenu1.add(WyznaczSciezke);

        jMenuItem1.setText("Zamknij");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(new JSeparator());
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu4.setText("Narzędzia");

        jMenuItem3.setText("Wyczyść projekt");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        WczytajzPliku.setText("Wczytaj plik");
        WczytajzPliku.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                WczytajzPlikuActionPerformed(evt);
            }
        });
        jMenu4.add(WczytajzPliku);

        jMenuBar1.add(jMenu4);

        jMenu2.setText("Pomoc");

        jMenuItem2.setText("O Programie");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * O Autorach XD
	 */
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem2ActionPerformed
    {//GEN-HEADEREND:event_jMenuItem2ActionPerformed
		JOptionPane.showMessageDialog(null, "Metoda CPM\nAutorzy:\nPaweł Kastelik\nWiktoria Krzeminska\n\nDziekuje Kacper Popczynski za pomoc\nKraków 2016", "O Programie!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

	/**
	 * Po wcisnieciu przycisku dodaje nowe Zdarzenie od listy Zdarzen i dodaje
	 * do comboboxa
	 *
	 */
    private void DodajZdarzeniebtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_DodajZdarzeniebtnActionPerformed
    {//GEN-HEADEREND:event_DodajZdarzeniebtnActionPerformed
		//Pole nie moze byc puste zeby zadzialac
		if (NazwaZdarzeniaField.getText().isEmpty())
		{
			JOptionPane.showMessageDialog(null, "Musisz podac nazwe Zdarzenia!", "Error!", JOptionPane.ERROR_MESSAGE);
		}
		else
		{
			//Stworz zdarzenie o nazwie z textfieldu
			Zdarzenie tmpZdarzenie = new Zdarzenie(NazwaZdarzeniaField.getText());
			NazwaZdarzeniaField.setText(null);
			boolean dodaj = true;

			//Sprawdz czy takie wydarzenie juz istnieje
			for (Zdarzenie w : Wydarzenia)
			{
				if (w.Nazwa.equals(tmpZdarzenie.Nazwa))
				{
					dodaj = false;
					break;
				}
			}

			//Jezeli nie istnieje to mozesz dodac do listy Wydarzen i GUI
			if (dodaj)
			{
				tmpZdarzenie.start_time = 0;
				tmpZdarzenie.end_time = Integer.MAX_VALUE;
				tmpZdarzenie.luz = 0;
				Wydarzenia.add(tmpZdarzenie);
				lastZdarzenieComboBox.addItem(new ComboItem(tmpZdarzenie.Nazwa, tmpZdarzenie));
				nextZdarzenieComboBox.addItem(new ComboItem(tmpZdarzenie.Nazwa, tmpZdarzenie));
				//JOptionPane.showMessageDialog(null, "Wydarzenie zostało dodane!", "Komunikat", JOptionPane.INFORMATION_MESSAGE);
			}
			else
			{
				JOptionPane.showMessageDialog(null, "Takie wydarzenie juz istnieje!", "Blad", JOptionPane.ERROR_MESSAGE);
			}
		}
    }//GEN-LAST:event_DodajZdarzeniebtnActionPerformed

	/**
	 * Zamyka program
	 *
	 * @param evt
	 */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem1ActionPerformed
    {//GEN-HEADEREND:event_jMenuItem1ActionPerformed
		dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

	/**
	 * Do tego textfieldu mozesz podac tylko liczby
	 *
	 * @param evt
	 */
    private void CzasCzynnosciFieldKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_CzasCzynnosciFieldKeyTyped
    {//GEN-HEADEREND:event_CzasCzynnosciFieldKeyTyped

		char enter = evt.getKeyChar();
		if (!(Character.isDigit(enter)))
		{
			evt.consume();
		}
    }//GEN-LAST:event_CzasCzynnosciFieldKeyTyped

	/**
	 * Po podwojnym kliknieciu w liste pokazuje wiecej szczegolow Czynnosci
	 *
	 * @param evt
	 */
    private void ZdarzeniaListaMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_ZdarzeniaListaMouseClicked
    {//GEN-HEADEREND:event_ZdarzeniaListaMouseClicked
		if (evt.getClickCount() == 2)
		{

			Object it = ZdarzeniaLista.getSelectedValue();
			Czynnosc q = ((ComboItem) it).getCzynnosc();
			JOptionPane.showMessageDialog(null, "Poprzednie wydarzenie: " + q.nazw_poprz + "\nNastepne zdarzenie: " + q.nazw_next + "\nCzas czynnosci: " + q.Czas, "Szczegolowe informacje", JOptionPane.INFORMATION_MESSAGE);
		}
    }//GEN-LAST:event_ZdarzeniaListaMouseClicked

	/**
	 * Dodaje Czynnosc na podstawie otrzymanych parametrow. Dodaje do listy i do
	 * GUI
	 *
	 * @param evt
	 */
    private void DodajCzynnoscbtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_DodajCzynnoscbtnActionPerformed
    {//GEN-HEADEREND:event_DodajCzynnoscbtnActionPerformed
		//pola nie moga byc puste aby dodac poprawnie czynnosc bo wpp wyswietli odpowiedni error messagebox
		if (!(lastZdarzenieComboBox.getSelectedItem() == null || nextZdarzenieComboBox.getSelectedItem() == null || CzasCzynnosciField.getText().isEmpty()))
		{
			//Pobranie danych z GUI
			int tmpczs = Integer.parseInt(CzasCzynnosciField.getText());
			Object ob1 = lastZdarzenieComboBox.getSelectedItem();
			Object ob2 = nextZdarzenieComboBox.getSelectedItem();
			Zdarzenie prv = ((ComboItem) ob1).getZdarzenie();
			Zdarzenie nex = ((ComboItem) ob2).getZdarzenie();
			//Jezeli to nie sa takie same obiekty to dodaj
			if (!prv.Nazwa.equals(nex.Nazwa))
			{
				boolean dodaj = true;
				int id = 0;

				//Sprawdza czy Istnieje juz taka czynnosc lub czynnosc odwrotna do niej
				for (Czynnosc c : Strzalki)
				{
					if (c.nazw_poprz.equals(prv.Nazwa) && c.nazw_next.equals(nex.Nazwa) || (c.nazw_next.equals(prv.Nazwa) && c.nazw_poprz.equals(nex.Nazwa)))
					{
						dodaj = false;
						break;
					}
				}

				//Jezeli nie to dodaje nowa czynnosc
				if (dodaj)
				{
					Czynnosc nowa = new Czynnosc(Integer.toString(id), tmpczs, prv.Nazwa, nex.Nazwa);
					Strzalki.add(nowa);
					listModel.addElement(new ComboItem(nowa.nazw_poprz + " -> " + nowa.nazw_next, nowa));
				}
				else
				{
					JOptionPane.showMessageDialog(null, "Taka czynnosc juz istnieje lub probowales polaczyc zdarzenia dwustronnie", "Error!", JOptionPane.ERROR_MESSAGE);
				}
			}
			else
			{
				JOptionPane.showMessageDialog(null, "Nie mozesz polaczyc dwoch takich samych wydarzen!", "Error!", JOptionPane.ERROR_MESSAGE);
			}
		}
		else
		{
			JOptionPane.showMessageDialog(null, "Nie wypelniles ktoregos z pol!", "Error!", JOptionPane.ERROR_MESSAGE);
		}

    }//GEN-LAST:event_DodajCzynnoscbtnActionPerformed
	/**
	 * Uruchamia funkcje wyznaczajaca sciezke krytyczna. Osobna funkcja: Sciezka
	 * Krytyczna
	 *
	 * @param evt
	 */
    private void WyznaczSciezkeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_WyznaczSciezkeActionPerformed
    {//GEN-HEADEREND:event_WyznaczSciezkeActionPerformed
		SciezkaKrytyczna();
    }//GEN-LAST:event_WyznaczSciezkeActionPerformed

	/**
	 * wczytuje dane z sformatowanego pliku: nazwa_czynnosci poprzedniego
	 * eventu, nazwa_czynnosci nastepnego eventu, czas trwania
	 *
	 * @param evt
	 */
    private void WczytajzPlikuActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_WczytajzPlikuActionPerformed
    {//GEN-HEADEREND:event_WczytajzPlikuActionPerformed
		//Sproboj odczytac plik a potem
		try
		{
			//Wyczysc wszystko co bylo do tej pory
			lastZdarzenieComboBox.removeAllItems();
			nextZdarzenieComboBox.removeAllItems();
			Wydarzenia.clear();
			Strzalki.clear();
			listModel.clear();

			//Dane pomocnicze
			String prv = null, nex = null;	//nazwy poprzedniego i nastepnego zdarzenia
			int tmpczs = 0;					//czas trwania wydarzenia
			Scanner in = new Scanner(plik);	//scanner do czytania pliku

			int id = 1;
			while (in.hasNext())			//dopoki end of file
			{
				prv = in.next();			//pobierz dane
				nex = in.next();
				tmpczs = in.nextInt();

				Zdarzenie tmpZdarzenie = new Zdarzenie(prv);
				boolean dodaj = true;

				//Sprawdzam czy nie bylo takie wydarzenia
				for (Zdarzenie w : Wydarzenia)
				{
					if (w.Nazwa.equals(prv))
					{
						dodaj = false;
						break;
					}
				}

				//Dodaje je do listy wydarzen
				if (dodaj)
				{
					tmpZdarzenie.start_time = 0;
					tmpZdarzenie.end_time = Integer.MAX_VALUE;
					tmpZdarzenie.luz = 0;
					Wydarzenia.add(tmpZdarzenie);
				}

				//Tworze nowa czynnosc
				Czynnosc nowa = new Czynnosc(Integer.toString(id), tmpczs, prv, nex);
				id++;
				Strzalki.add(nowa);
			}
			

			Zdarzenie nextTmp = new Zdarzenie(nex);
			nextTmp.start_time = 0;
			nextTmp.end_time = Integer.MAX_VALUE;
			nextTmp.luz = 0;
			Wydarzenia.add(nextTmp);	//dodaj ostatnie wydarzenie do listy

			//for wypelnia wszystkie itemy w gui
			for (int i = 0; i < Wydarzenia.size(); i++)
			{
				lastZdarzenieComboBox.addItem(new ComboItem(Wydarzenia.get(i).Nazwa, Wydarzenia.get(i)));
				nextZdarzenieComboBox.addItem(new ComboItem(Wydarzenia.get(i).Nazwa, Wydarzenia.get(i)));
			}
			for (int i = 0; i < Strzalki.size(); i++)
			{
				listModel.addElement(new ComboItem(Strzalki.get(i).nazw_poprz + " -> " + Strzalki.get(i).nazw_next, Strzalki.get(i)));
			}
		} catch (FileNotFoundException ex)
		{
			JOptionPane.showMessageDialog(this, ex, "Error", JOptionPane.ERROR_MESSAGE);
		}
    }//GEN-LAST:event_WczytajzPlikuActionPerformed

	/**
	 * Wyczyszcza dane z gui i z listy Wydarzen i z listy Czynnosci
	 *
	 * @param evt
	 */
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem3ActionPerformed
    {//GEN-HEADEREND:event_jMenuItem3ActionPerformed
		int dialogResult = JOptionPane.showConfirmDialog(null, "Czy chcesz usunąć projekt?", "UWAGA", JOptionPane.YES_NO_OPTION);
		if (dialogResult == JOptionPane.YES_OPTION)
		{
			lastZdarzenieComboBox.removeAllItems();
			nextZdarzenieComboBox.removeAllItems();
			NazwaZdarzeniaField.setText(null);
			CzasCzynnosciField.setText(null);
			Wydarzenia.clear();
			Strzalki.clear();
			listModel.clear();
		}
    }//GEN-LAST:event_jMenuItem3ActionPerformed

	/**
	 * Wyswietla w konsoli Wszysttkie wydarzenia w liscie Wydarzenia
	 */
	public void PokazWydarzenia()
	{

		System.out.println("WYDARZENIA");
		System.out.println("--------------------------------");

		for (Zdarzenie w : Wydarzenia)
		{
			System.out.println("[" + w.Nazwa + "] start: " + w.start_time + ", end: " + w.end_time + ", luz: " + w.luz);
		}
		System.out.println("--------------------------------");
	}

	/**
	 * Wyswietla w konsoli wyszystkie Czynnosci w liscie Strzalki
	 */
	public void PokazCzynnosci()
	{
		System.out.println("CZYNNOSCI");
		System.out.println("--------------------------------");

		for (Czynnosc w : Strzalki)
		{
			System.out.println("[" + w.nazwa_czynnosci + "] (" + w.nazw_poprz + ")----[" + w.Czas + "]----(" + w.nazw_next + ")");
		}
		System.out.println("--------------------------------");
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[])
	{

		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try
		{
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
			{
				if ("Nimbus".equals(info.getName()))
				{
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex)
		{
			java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex)
		{
			java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex)
		{
			java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex)
		{
			java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable()
		{
			public void run()
			{
				new OknoGlowne().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField CzasCzynnosciField;
    private javax.swing.JButton DodajCzynnoscbtn;
    private javax.swing.JButton DodajZdarzeniebtn;
    private javax.swing.JTextField NazwaZdarzeniaField;
    private javax.swing.JMenuItem WczytajzPliku;
    private javax.swing.JDialog WybZdarzeniaDial;
    private javax.swing.JMenuItem WyznaczSciezke;
    private javax.swing.JList ZdarzeniaLista;
    private javax.swing.JButton jButton1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox lastZdarzenieComboBox;
    private javax.swing.JComboBox nextZdarzenieComboBox;
    // End of variables declaration//GEN-END:variables

}
